name: Multi Lang App

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      CONFIG: Release
      PLATFORM: x64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install WiX Toolset 3.14
        run: choco install wixtoolset --version=3.14.1.20250415 --yes

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: nuget restore DotNetSolution\DotNetSolution.sln

      - name: Build C++ Native Project
        run: msbuild DotNetSolution\CppProject\CppProject.vcxproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Build C++ Native Tests
        run: msbuild DotNetSolution\Tests\CppNativeTests\CppNativeTests.vcxproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Run C++ Native Tests
        run: |
          mkdir CppTestResults
          .\DotNetSolution\Tests\CppNativeTests\x64\Release\CppNativeTests.exe --gtest_output=xml:CppTestResults\CppTestResults.xml

      - name: Build CLI Project
        run: msbuild DotNetSolution\CliProject\CliProject.vcxproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Build CLI Tests
        run: msbuild DotNetSolution\Tests\CliTests\CliTests.csproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Run CLI Tests
        run: dotnet test DotNetSolution/Tests/CliTests/CliTests.csproj --configuration ${{ env.CONFIG }} --no-build --logger trx

      - name: Build .NET Framework Project
        run: msbuild DotNetSolution\NetFrameworkApp\NetFrameworkApp.csproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Build .NET Standard Project
        run: msbuild DotNetSolution\NetStandardLib\NetStandardLib.csproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Build and Run .NET Tests
        run: dotnet test DotNetSolution/Tests/DotNetTests/DotNetTests.csproj --configuration ${{ env.CONFIG }}  --logger trx

      - name: Build Wpf Application
        run: msbuild DotNetSolution\WpfApp\WpfApp.csproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Build UI Tests
        run: msbuild DotNetSolution\Tests\UITests\UITests.csproj /p:Configuration=${{ env.CONFIG }} /p:Platform=${{ env.PLATFORM }}

      - name: Build MSI Installer
        run: msbuild Installer\Installer.sln /p:Configuration=Release /p:Platform=x86

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MSI-Package
          path: |
            Installer\bin\Release\*.msi
            Installer\bin\Release\*.cab

      - name: Install MSI on runner
        run: |
          msiexec /i Installer\bin\Release\Installer.msi /quiet /norestart

      - name: Run UI Tests (on installed app)
        run: dotnet test DotNetSolution/Tests/UITests/UITests.csproj --configuration ${{ env.CONFIG }} --no-build --logger trx
        env:
          APP_DEPLOY_PATH: C:\Users\runneradmin\AppData\Local\MultiLangApp\WpfApp.exe

      - name: Run WpfApp to generate logs
        run: |
          Start-Process -FilePath "C:\Users\runneradmin\AppData\Local\MultiLangApp\WpfApp.exe"
          Start-Sleep -Seconds 5

      - name: List MultiLangApp contents
        shell: pwsh
        run: |
          Write-Host "=== MultiLangApp folder ==="
          if (Test-Path "C:\Users\runneradmin\AppData\Local\MultiLangApp") {
              Get-ChildItem -Path "C:\Users\runneradmin\AppData\Local\MultiLangApp" -Recurse | Format-List
          } else {
              Write-Host "Folder does not exist."
          }

      - name: Upload Logs Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Logs
          path: C:/Users/runneradmin/AppData/Local/MultiLangApp/Logs/**
          if-no-files-found: warn
